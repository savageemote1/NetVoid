name: Deploy to Codespace

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  deploy-to-codespace:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements_secure.txt
        
    - name: Run tests
      run: |
        python -c "import sys; print('Python version:', sys.version)"
        python -c "import flask; print('Flask version:', flask.__version__)"
        python -c "import Crypto; print('PyCrypto version:', Crypto.__version__)"
        
    - name: Create deployment package
      run: |
        mkdir -p deployment
        cp -r server deployment/
        cp -r client deployment/
        cp -r config deployment/
        cp -r templates deployment/
        cp -r static deployment/
        cp secure_web_server.py deployment/
        cp requirements_secure.txt deployment/
        cp install.py deployment/
        cp *.bat deployment/
        cp start_codespace.sh deployment/
        cp .env.codespace deployment/
        
        # Create deployment info
        echo "Deployment created at $(date)" > deployment/deployment_info.txt
        echo "Commit: ${{ github.sha }}" >> deployment/deployment_info.txt
        echo "Branch: ${{ github.ref_name }}" >> deployment/deployment_info.txt
        echo "Codespace: ${{ github.codespace_name }}" >> deployment/deployment_info.txt
        
    - name: Upload deployment artifacts
      uses: actions/upload-artifact@v3
      with:
        name: netvoid-codespace-deployment
        path: deployment/
        
    - name: Deploy notification
      run: |
        echo "ðŸš€ NetVoid Server deployment ready for Codespace!"
        echo "Repository: savageemote1/NetVoid"
        echo "Commit: ${{ github.sha }}"
        echo "Branch: ${{ github.ref_name }}"
        echo "Deployment package created successfully"
